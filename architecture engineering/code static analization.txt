quality gates- метод использования статического анализатора кода для непрырывного улучшения качества кода.
Известны следующие способы введения quality gates (при внедрении в легаси код):

1. Установка лимита общего количества предупреждений или количества предупреждений, делённого на количество строк кода. 
   Работает это плохо, т. к. такой gate свободно пропускает изменения с новыми дефектами, пока их лимит не превышен.

2. Фиксация, в определённый момент, всех старых предупреждений в коде как игнорируемых, и отказ в сборке при возникновении
   новых предупреждений. Такую функциональность предоставляет PVS-studio и некоторые онлайн-ресурсы, например, Codacy. 
   Мне не довелось работать в PVS-studio, что касается моего опыта с Codacy, то основная их проблема заключается в том, 
   что определение что есть «старая», а что «новая» ошибка — довольно сложный и не всегда правильно работающий алгоритм, 
   особенно если файлы сильно изменяются или переименовываются. На моей памяти Codacy мог пропускать в пулл-реквесте новые 
   предупреждения, и в то же время не пропускать pull request из-за предупреждений, не относящихся к изменениям в коде данного PR.

3. На мой взгляд, наиболее эффективным решением является описанный в книге Continuous Delivery «метод храповика» («ratcheting»). 
   Основная идея заключается в том, что свойством каждого релиза является количество предупреждений статического анализа, 
   и допускаются лишь такие изменения, которые общее количество предупреждений не увеличивают.
   
   
Источник: https://habr.com/ru/post/436868/
