PATTERNS

MVC - Model-View-Controller («Модель-Представление-Контроллер», «Модель-Вид-Контроллер») — схема разделения данных приложения[1],
пользовательского интерфейса[2] и управляющей логики[3] на три отдельных компонента: модель, представление и контроллер — таким
образом, что модификация каждого компонента может осуществляться независимо.

1. Модель (Model) предоставляет данные и реагирует на команды контроллера, изменяя своё состояние[1].
2. Представление (View) отвечает за отображение данных модели пользователю, реагируя на изменения модели[1].
3. Контроллер (Controller) интерпретирует действия пользователя, оповещая модель о необходимости изменений[1].

+ Можно иметь много представлений одних и техже данных.
+ Можно иметь одно представление для многих моделей данных
+ Можно разделить разработку на фрон и энд части.
+ Можно независимо изменять и заменять любую часть.


------------------------------------------------------
Добавить минусы MVC

Добавить описание паттернов:
- Layered pattern
- Broker pattern
- Client-Server pattern

Набросок на будущее, - описать:
- гексогональную архитектуру
- микросервисную и монолитную архитекрутры
- layered архитектуру
- каналы и фильтры архитектуру
- событийно-ориентированная архитектуру
- микроядерная архитектура

Ввести классификацию - разбить на типы структур и виды паттернов.

https://habr.com/ru/company/it-grad/blog/276297/
https://habr.com/ru/company/1cloud/blog/424911/


